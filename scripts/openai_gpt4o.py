import base64
import requests

# Function to encode the image
def encode_image(image_path):
    with open(image_path, "rb") as image_file:
        return base64.b64encode(image_file.read()).decode('utf-8')

def openai_gpt4o(img_path):
    # input example: img_path = 'bev.png'
    # OpenAI API Key
    api_key = "sk-YNU1jSMUQpggx3JG78BfB682555b49F0976cCbFe5c77Fd35"

    # Getting the base64 string
    base64_image = encode_image(img_path)

    headers = {
    "Content-Type": "application/json",
    "Authorization": f"Bearer {api_key}"
    }

    payload = {
    "model": "gpt-4o",
    "messages": [
        {
        "role": "user",
        "content": [
            {
            "type": "text",
            #   "text": "The image is generated by carla-birdeye-view. Please describe the image."
                "text": "There are many vehicles (shown as yellow rectangles) on the urban road with unsignalized intersections. The vehicles drive on the right side of the road. The numbers above the vehicles are their IDs. Now, your task is to determine the vehicle groups that are probably to collide with each other. Please provide the vehicle IDs of the vehicles in the same group. If there is no vehicle group that is probably to collide with each other, please type 'None'."
            },
            {
            "type": "image_url",
            "image_url": {
                "url": f"data:image/jpeg;base64,{base64_image}"
            }
            }
        ]
        }
    ],
    "max_tokens": 300
    }
    # record the response time
    import time
    start = time.time()
    response = requests.post("https://api.chsdw.top/v1/chat/completions", headers=headers, json=payload)
    print("Time taken: ", time.time()-start, "s")
    # print the pure text response
    print(response.content)
    # save the response to a json file
    response_json = response.json()
    raw_result = response_json["choices"][0]["message"]["content"]
    return raw_result